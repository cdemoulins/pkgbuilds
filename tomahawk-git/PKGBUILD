# Maintainer: Kuba Serafinowski <zizzfizzix(at)gmail(dot)com>

##############################################################
#### The section below can be adjusted to suit your needs ####
##############################################################
# How many jobs should 'make' use (for multicore CPUs)?
# Value is 2 by default because it doesn't hurt but can help.

_jobcount="2"

##############
# What type of build do you want?
# See http://techbase.kde.org/Development/CMake/Addons_for_KDE#Buildtypes to check what is supported.
# Default is DebugFull to help with debugging.

_buildtype="DebugFull"

##############################################################

pkgname=tomahawk-git
pkgver=20110428
pkgrel=1
pkgdesc="A Music Player App written in C++/Qt"
arch=('i686' 'x86_64')
url="http://tomahawk-player.org/"
license=('GPL3')
depends=('phonon>=4.5.0' 'taglib>=1.6.2' 'boost>=1.30' 'clucene-git' 'libechonest-git')
makedepends=('git' 'cmake>=2.8.0')
provides=('tomahawk')
conflicts=('tomahawk')
options=(!strip)
changelog=ChangeLog

# Those are jreen deps so shouldn't be up there by default
# FIXME: remove this and add ext. jreen to deps
#depends[${#depends[@]}-1]='qca'
depends+=('qca' 'libidn')

# Clean options array to strip pkg if release buildtype is chosen
if [[ ${_buildtype} == "Release" ]] || [[ ${_buildtype} == "release" ]]; then
  options=()
fi

_gitroot="git://github.com/tomahawk-player/tomahawk.git"
_gitname="tomahawk"

build() {
  cd ${srcdir}
  msg "Connecting to GIT server..."

  if [ -d ${_gitname} ]; then
    cd ${_gitname} && git pull origin
  else
    git clone --depth 1 ${_gitroot}
  fi

  # Get/update jreen if enabled
  # FIXME: make an external package for jreen (it's default by now)
  cd ${srcdir}/${_gitname}/thirdparty
  if [[ $(find -type d -empty|grep jreen|wc -l) -eq 1 ]]; then
    msg "Obtaining jreen..."
    cd ${srcdir}/${_gitname}
    git submodule init && git submodule update
  else
    msg "Updating jreen..."
    git pull origin
  fi

  msg "GIT checkout done or server timeout"
  msg "Starting build..."

  rm -rf ${srcdir}/${_gitname}-build
  cp -r ${srcdir}/${_gitname} ${srcdir}/${_gitname}-build
  cd ${srcdir}/${_gitname}-build

  cmake -DCMAKE_INSTALL_PREFIX=/usr -DINTERNAL_JREEN=ON -DCMAKE_BUILD_TYPE=${_buildtype}
  make -j ${_jobcount}
}

package() {
  cd ${srcdir}/${_gitname}-build
  make DESTDIR=${pkgdir} install
}
